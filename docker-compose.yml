services:
  # MySQL 데이터베이스 서비스 설정
  db:
    image: mysql:8.0 # 공식 MySQL 8.0 이미지를 사용
    container_name: jsh-board-db # 컨테이너의 고정된 이름
    restart: always # 컨테이너가 중지되면 항상 다시 시작
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # MySQL root 계정의 비밀번호
      MYSQL_DATABASE: ${MYSQL_DATABASE} # 컨테이너 생성 시 자동으로 생성할 데이터베이스 이름
      MYSQL_USER: ${MYSQL_USER} # 생성할 사용자 이름
      MYSQL_PASSWORD: ${MYSQL_PASSWORD} # 사용자의 비밀번호
      TZ: Asia/Seoul
    ports:
      - "3306:3306" # 호스트의 3306 포트와 컨테이너의 3306 포트를 연결
    volumes:
      - ./data/mysql:/var/lib/mysql # 호스트의 ./data/mysql 디렉토리와 컨테이너의 데이터 디렉토리를 연결하여 데이터 영속성 확보
    command: # MySQL 서버의 기본 문자셋을 utf8mb4로 설정
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  # Spring Boot 애플리케이션 서비스 설정
  app:
    build: . # 현재 디렉토리의 Dockerfile을 사용하여 이미지를 빌드
    container_name: jsh-board-app
    restart: always
    depends_on: # 의존 관계 설정
      - db # 'db' 서비스가 시작된 후에 'app' 서비스를 시작
    ports:
      - "8080:8080" # 호스트의 8080 포트와 컨테이너의 8080 포트를 연결
    environment:
      - TZ=Asia/Seoul
      - SPRING_PROFILES_ACTIVE=default # application.properties를 사용하도록 명시 (필요 시 dev, prod 등으로 변경)
      - DB_URL=${DB_URL}
      - DB_USER=${MYSQL_USER}
      - DB_PASSWORD=${MYSQL_PASSWORD}